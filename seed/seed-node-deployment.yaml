apiVersion: apps/v1
kind: Deployment
metadata:
  name: seed-node
  labels:
    cluster: seed-nodes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seed-node
  template:
    metadata:
      labels:
        app: seed-node
        cluster: seed-nodes
    spec:
      initContainers:
      - name: cert-generator
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          apk add --no-cache openssl
          mkdir -p /certs
          # Generate CA certificate
          openssl genrsa -out /certs/ca-key.pem 2048
          openssl req -x509 -new -nodes -key /certs/ca-key.pem -sha256 -days 365 \
            -out /certs/ca-cert.pem -subj "/CN=TripCodeCA/O=TripCode/C=US"
          
          # Generate server certificates signed by the CA
          openssl genrsa -out /certs/private-key.pem 2048
          openssl req -new -key /certs/private-key.pem \
            -out /certs/server.csr -subj "/CN=localhost/O=TripCode/C=US"
          openssl x509 -req -in /certs/server.csr -CA /certs/ca-cert.pem \
            -CAkey /certs/ca-key.pem -CAcreateserial -out /certs/public-key.pem -days 365
          
          # Set permissions
          chmod 644 /certs/*.pem
          ls -la /certs
        volumeMounts:
        - name: certs-volume
          mountPath: /certs
      containers:
        - name: tc-seed-node
          image: foultrip/seed-node-tripcode:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8081
              name: ws
          env:
            - name: NODE_ENV
              value: "production"
            - name: HTTP_PORT
              value: "8080"
            - name: WS_PORT
              value: "8081"
            - name: SEED_NODES
              value: ""
            - name: REDIS_HOST
              value: "localhost"
            - name: REDIS_PORT
              value: "6379"
            - name: CERTS_PATH
              value: "/app/certs/tls"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: data-volume
              mountPath: /app/data
            - name: certs-volume
              mountPath: /app/certs/tls
        - name: redis
          image: redis:alpine
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
            - name: redis-data
              mountPath: /data
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: redis-data
          emptyDir: {}
        - name: data-volume
          persistentVolumeClaim:
            claimName: seed-node-pvc
        - name: certs-volume
          emptyDir: {}